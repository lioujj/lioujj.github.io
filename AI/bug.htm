<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='Access-Control-Allow-Origin' content='*'><meta http-equiv='Access-Control-Allow-Credentials' content='true'><script src='https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js'></script><script src='https://fustyles.github.io/webduino/SpBlocklyJS/GameElements_20190131/marked.min.js'></script><script src='https://fustyles.github.io/webduino/SpBlocklyJS/GameElements_20190131/gameelements.js'></script><link rel='stylesheet' href='https://fustyles.github.io/webduino/SpBlocklyJS/css/icon_custom.css' /><script src='https://fustyles.github.io/webduino/SpBlocklyJS/MQTT_20220324/mqtt.min.js'></script><script src='https://fustyles.github.io/webduino/SpBlocklyJS/SpreadsheetSQL_20210403/spreadsheetsql.js'></script><script src='https://fustyles.github.io/webduino/SpBlocklyJS/SpreadsheetSQL_20210403/loader.js'></script></head><body>
<script>
const delay = (seconds) => {
    return new Promise((resolve) => {
        setTimeout(resolve, seconds * 1000);
    });
};
const main = async () => {
    var sumData, mqttData, sheetID, sheetName, topicName, titleName, j, i;

    function spreadsheetsql_QueryResponse_sheetTitle(res) {
        spreadsheetsql_QueryResponse(res, "sheetTitle");
    }
    window.spreadsheetsql_QueryResponse_sheetTitle = spreadsheetsql_QueryResponse_sheetTitle;

    async function spreadsheetsql_getDataFinish_sheetTitle(head_response, response) {
        titleName = (spreadsheetsql_getCell(1, 1, "sheetTitle"));
        spreadsheetsql_clearData("sheetTitle");
        span_set('spanTitle', "innerHTML", titleName);
        span_set('spanTitle', "display", true);

    };
    window.spreadsheetsql_getDataFinish_sheetTitle = spreadsheetsql_getDataFinish_sheetTitle;

    function spreadsheetsql_QueryResponse_(res) {
        spreadsheetsql_QueryResponse(res, "");
    }
    window.spreadsheetsql_QueryResponse_ = spreadsheetsql_QueryResponse_;

    async function spreadsheetsql_getDataFinish_(head_response, response) {
        spreadsheetsql_getDataTable('', 400, 20, 100, 80, true, "");
        button_set('btnClear', "display", true);

    };
    window.spreadsheetsql_getDataFinish_ = spreadsheetsql_getDataFinish_;

    function mathRandomInt(a, b) {
        if (a > b) {
            // Swap a and b to ensure a is smaller.
            var c = a;
            a = b;
            b = c;
        }
        return Math.floor(Math.random() * (b - a + 1) + a);
    }

    function mqttBinarytobase64(input_array) {
        const content = new Uint8Array(input_array);
        return btoa(String.fromCharCode.apply(null, content));
    }



    sumData = 0;
    mqttData = 0;
    sheetID = '1mU6Q-UdlxeB73-rZE5bSkqcAS8V10-C4_bzI6h3gUIE';
    sheetName = '昆蟲名單';
    topicName = 'syes/syes2';
    titleName = '';
    spreadsheetsql_settings(sheetID, '標題', "sheetTitle");
    spreadsheetsql_settings(sheetID, sheetName, "");
    span_create('label_1', 10, 10, 20, '試算表ID：', 999);
    text_create('txt_1', 600, 30, 130, 10, '#ffffff', '#000000', 20, 1, sheetID, 999, true);
    span_create('label_2', 10, 60, 20, '工作表名稱：', 999);
    text_create('txt_2', 300, 30, 130, 60, '#ffffff', '#000000', 20, 1, sheetName, 999, true);
    span_create('label_3', 10, 110, 20, 'Topic名稱：', 999);
    text_create('txt_3', 300, 30, 130, 110, '#ffffff', '#000000', 20, 1, topicName, 999, true);
    button_create('btnSubmit', 140, 40, 250, 160, 1, null, '開啟昆蟲資料', 20, 999, true);
    async function gamebutton_btnSubmit_onclick(event) {
        if ((text_get('txt_1', "value")) != '' && (text_get('txt_2', "value")) != '' && (text_get('txt_3', "value")) != '') {
            for (j = 1; j <= 3; j++) {
                span_set(('label_' + String(j)), "display", false);
                text_set(('txt_' + String(j)), "display", false);
            }
            button_set('btnSubmit', "display", false);
            sheetID = (text_get('txt_1', "value"));
            sheetName = (text_get('txt_2', "value"));
            topicName = (text_get('txt_3', "value"));
            spreadsheetsql_settings(sheetID, '標題', "sheetTitle");
            spreadsheetsql_executeSql('select A limit 1 offset 0', "sheetTitle");
            spreadsheetsql_settings(sheetID, sheetName, "");
            spreadsheetsql_executeSql('select A,B limit 6 offset 0', "");
            mqtt_client.subscribe(topicName);
        }
    };
    document.getElementById("gamebutton_btnSubmit").addEventListener("click", gamebutton_btnSubmit_onclick, true);
    span_create('spanTitle', 100, 20, 30, '', 999);
    span_set('spanTitle', "display", false);
    button_create('btnClear', 80, 30, 200, 270, 1, null, '清空資料', 12, 999, false);
    async function gamebutton_btnClear_onclick(event) {
        button_set('btnClear', "display", false);
        for (i = 2; i <= 6; i++) {
            spreadsheet_insert("setcell", "", i, 2, String('0'), ['https://docs.google.com/spreadsheets/d/', sheetID, '/edit'].join(''), sheetName, "https://script.google.com/macros/s/AKfycbxA3hhTlntwVTOcqngOC_iJL_zLmRwzcDbMYDs7FD8iinNsY9XZsMkD7AcXTIUbEc33EA/exec");
            await delay(0.5);
        }
        await delay(2.5);
        spreadsheetsql_executeSql('select A,B limit 6 offset 0', "");
    };
    document.getElementById("gamebutton_btnClear").addEventListener("click", gamebutton_btnClear_onclick, true);
    const clientId = ('syes_sheet_' + String(mathRandomInt(1, 3000)));
    const options = {
        username: '',
        password: '',
        keepalive: 60,
        clientId: clientId,
        protocolId: "MQTT",
        protocolVersion: 4,
        clean: true,
        reconnectPeriod: 1000,
        connectTimeout: 30 * 1000
    }

    var mqtt_client = mqtt.connect('wss://broker.emqx.io:8084/mqtt', options);
    mqtt_client.on("connect", () => {
        console.log("connected");
        mqtt_client.on("message", async function(topic, payload) {
            if (topic == topicName) {
                if ((new TextDecoder().decode(payload)) != '') {
                    mqttData = (Number(payload));
                    if (mqttData > 0 && mqttData < 6) {
                        sumData = (text_to_number((spreadsheetsql_getCell(2, mqttData, "")))) + 1;
                        spreadsheetsql_clearData("");
                        spreadsheet_insert("setcell", "", mqttData + 1, 2, String(sumData), ['https://docs.google.com/spreadsheets/d/', sheetID, '/edit'].join(''), sheetName, "https://script.google.com/macros/s/AKfycbxA3hhTlntwVTOcqngOC_iJL_zLmRwzcDbMYDs7FD8iinNsY9XZsMkD7AcXTIUbEc33EA/exec");
                        await delay(1.5);
                        spreadsheetsql_executeSql('select A,B limit 6 offset 0', "");
                        while ((text_to_number((spreadsheetsql_getCell(2, mqttData, "")))) != sumData) {
                            spreadsheetsql_executeSql('select A,B limit 6 offset 0', "");
                            await delay(1.5);
                        }
                    }
                }
            }
        })
    })
};
main();
</script>
</body></html>